// include the library code:
#include <LiquidCrystal.h>
#define trigPin 7
#define echoPin 6
//const int pingPin = 7;
// initialize the library with the numbers of the interface pins
long duration;
int distance;

//long distancein;
const int RS = 12, EN = 11, D7 = 2, D6 = 3, D5 =4, D4 = 5;

LiquidCrystal lcd(RS,EN,D4,D5,D6,D7);

//LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

void setup(){
  // set up the LCD's number of columns and rows:
  lcd.begin(16,2);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  //digitalWrite(echoPin, INPUT); 
  // Print a message to the LCD.
  //lcd.print("hello, world!");
  Serial.begin(9600);
}

void loop() {
  //Trigger the sensor with a 2usec HIGH pulse
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(2);
  digitalWrite(trigPin, LOW);
  //pinMode(trigPin, INPUT);              //set pin as input to read return pulse from sensor
  duration =pulseIn(echoPin, HIGH);    //obtain length of HIGH pulse in microseconds

  //Ping sensor returns HIGH output pulse that gives the time required for the burst
  //echo to return back to the sensor 

  //Speed of sound travels at 1130ft/sec (0.00113ft/usec) or 340m/sec (0.034cm/usec)
  //Must divide by 2 since time received is time for sound wave to travel to and from object

  //Calculate distance in inches and centimeters
  //distance = duration*0.034/2;
  //distancein = distance*0.3937;     //1cm = 0.3937in
  
 
distance = microsecondsToCentimeters(duration);
lcd.clear();

  if(  (distance > 0) && (distance <= 30)   ){
      	lcd.clear();
  		lcd.print("100%");
  }
	else
  
   if(  (distance > 30) && (distance <= 50)  ){
      	lcd.clear();
		lcd.print("80%");
        }
	else
 
          if(  (distance > 50) && (distance <= 75)  ){ 
				lcd.clear();
   				lcd.print("60%");
        }
			else

          if(  (distance > 75) && (distance <= 80)  ){ 

 					lcd.clear();
					lcd.print("40%");
        }
				else
 
      if(  (distance >80 ) && (distance <= 100)  ){ 

 			lcd.clear();
			lcd.print("20%");
    }
		else
 
      if(  distance > 100 ){ 

 			lcd.clear();
			lcd.print("0%");
    }
 


//delay(10000);


    }

long microsecondsToCentimeters(long microseconds)
{return microseconds / 29 / 2;}

  //display distance to LCD
  //lcd.clear();
  //lcd.print("Distance:");
  //lcd.print(distance);
  //lcd.print("cm");
  //lcd.setCursor(10,1);
  //lcd.print(distancein);
  //lcd.print("in");
  //delay(100);
  //pinMode(trigPin, OUTPUT);               //set pin 8 back to an output to trigger next distance measurement
  //digitalWrite(trigPin, LOW);

//}
